共通処理

52枚のカードを配列に格納する
※データが多いので、他の方法の方がいい？

hitをclickすると、52枚のカードからplayer、dealerそれぞれ2枚ずつランダムにデータを生成
画像はcardSpaceに表示、数字はcountに取って足す

カードを引いたら、引いたカードは母数から除外する

次にhitをclickしたら、減った母数からランダムに1枚生成する

standをclickすると、勝敗を判定する
勝敗は、「winner」、「loser」、「BlackJack!」、「draw」の以下4パターン

resetを押すと、全てのカードの画像を消して、
countの数字を0にする
--------------------------------------------------
・playerの勝利「winner」
- dearerの手札<playerの手札<22
- playerの手札<22≦delerの手札

・playerの敗北「loser」
- playerの手札<dealerの手札<22
- dealerの手札<22≦playerの手札

・引き分け
- hitした際に同じ点数の場合は、「draw」となる

・BlackJack
-　最初に配られたカードがAと10の場合は、「BlackJack!」となる
--------------------------------------------------
dealerの処理
最初の1枚だけ表面の表示、あとはトランプの色にあった裏面画像の表示
※裏面画像を表示させつつ、画像と数字をどこにどうやってストックしておくか

手札の数が16以下の場合は、playerがhitもしくはstandを押したときに
1枚カードを生成する

手札が17以上の場合は、カードを引かない

※どのイベントに紐づけてこの処理を行うか
（todosのitemLeftのように、documentやwindowをイベントに設置？）
--------------------------------------------------

追加作業
スタートボタンは最初しか押せないorスタートボタンをなくし、2枚ある状態を初期状態と設定する
hitの枚数制限
出来ればディーラーのトランプはstand押すまで非表示

--------------------------------------------------
※メモ※

午後やること
・ディーラーの手札が16以下だった時の処理する　//カードの表示はできるが、card.numberのsumが出来ていない。
- standBtnを押しても勝敗判定の処理をしないようにする　
- dealerのカードを引く（17以上になるまで繰り返し）　→.numberの取得が出来ていないので、停止の使用がない。ここは.numberの取得が出来ればforを止められるはず
- dealerの手札が17以上になったら勝敗判定を行う

standを押した時のディーラーの手札.numberの取得が出来ていないです。
この数が処理できれば、
「ディーラーの手札が16以下だった時の処理する」→「dealerの手札が17以上になったら勝敗判定を行う」という処理が出来ると思っています。
restartボタンは、そもそもの処理方法が間違っていたので、
処理のリセットと再処理という処理方法に直さなければいけないと思っています。

■ボタン制御
・startボタン
-　カードが一枚もない状態（最初の1回しか押せない）
　 on・offは出来たが、カード枚数の初期化が出来ていない
・hitボタンの制御
-　カードが2枚以上ある状態でないと押せない
・standボタン
-　カードが2枚以上ある状態でないと押せない

process.stdin.resume();
process.stdin.setEncoding('utf8');
// 自分の得意な言語で
// Let's チャレンジ！！

掛け算 (paizaランク D 相当)　paiza
process.stdin.on('data', function (chunk) {
    var line = chunk.toString();
    var inputs = line.trim().split("\n");


    console.log(inputs[0] * inputs[1]);
});
